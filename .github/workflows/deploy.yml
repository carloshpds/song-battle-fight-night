name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to GitHub Pages'
        required: true
        default: true
        type: boolean

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test-and-build:
    name: Run Tests and Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm run type-check

      - name: Lint code
        run: pnpm run lint

      - name: Run tests
        run: pnpm run test --run

      - name: Create production environment file
        run: |
          cat > .env.production << 'EOF'
          # App Configuration
          VITE_APP_NAME=Music Battle Fight Night
          VITE_APP_VERSION=1.0.0-beta

          # Spotify Configuration
          VITE_SPOTIFY_CLIENT_ID=${{ secrets.SPOTIFY_CLIENT_ID }}
          VITE_SPOTIFY_CLIENT_SECRET=${{ secrets.SPOTIFY_CLIENT_SECRET }}
          VITE_SPOTIFY_REDIRECT_URI=https://carloshpds.github.io/song-battle-fight-night/auth/callback
          VITE_SPOTIFY_SCOPES=playlist-read-private,playlist-read-collaborative,user-read-private
          EOF

      - name: Build application
        run: pnpm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist
          retention-days: 30

  deploy:
    name: Deploy to GitHub Pages
    needs: test-and-build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'workflow_dispatch' && inputs.deploy == true

    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
